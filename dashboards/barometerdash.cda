<?xml version="1.0" encoding="UTF-8"?>
<CDADescriptor>
   <DataSources>
      <Connection id="dvt_conn" type="sql.jndi">
         <Jndi>jdbcEuOshaBarometer</Jndi>
      </Connection>
   </DataSources>

   <!-- Get data by Indicator -->
   <DataAccess access="public" connection="dvt_conn" id="getIndicatorData" type="sql">
       <Cache duration="3600" enabled="true"/>
       <Columns/>
       <Parameters>
           <Parameter default="1" name="pIndicator" type="Numeric" />
       </Parameters>
       <Query>SELECT i.INDICATOR_NAME as Indicator, IFNULL(f.COUNTRY,f.REGION) AS Country, f.MEASURE AS Value
           FROM figure f
           INNER JOIN indicator i
           ON i.INDICATOR_ID = f.INDICATOR_ID
           WHERE f.INDICATOR_ID = ${pIndicator}
           ORDER BY Measure ASC
       </Query>
   </DataAccess>

   <!-- GET INDICATOR DATA FOR REGIONS (INDICATOR SPLIT) -->
       <DataAccess access="public" connection="dvt_conn" id="getTwoIndicatorsData" type="sql">
         <Cache duration="3600" enabled="true"/>
         <Columns/>
         <Parameters>
           <Parameter default="6" name="pIndicator1" type="Numeric" />
           <Parameter default="4" name="pIndicator2" type="Numeric" />
         </Parameters>
         <Query>
           (
             SELECT i.INDICATOR_NAME as Indicator, IFNULL(ff.COUNTRY,ff.REGION) AS Country, ff.MEASURE AS Value
             FROM figure ff
             INNER JOIN indicator i
             ON i.INDICATOR_ID = ff.INDICATOR_ID
             WHERE ff.INDICATOR_ID = ${pIndicator1}

           )UNION(
             SELECT i.INDICATOR_NAME as Indicator, IFNULL(f.COUNTRY,f.REGION) AS Country, f.MEASURE AS Value
             FROM figure f
             INNER JOIN indicator i
             ON i.INDICATOR_ID = f.INDICATOR_ID
             WHERE f.INDICATOR_ID = ${pIndicator2}
           )
           ORDER BY Indicator ASC, Value ASC
         </Query>
      </DataAccess>
    <!-- Get data by Year for Indicator with two countries -->
   <DataAccess access="public" connection="dvt_conn" id="getHistIndicatorData" type="sql">
       <Cache duration="3600" enabled="true"/>
       <Columns/>
       <Parameters>
           <Parameter default="1" name="pIndicator" type="Numeric" />
           <Parameter default="Austria" name="pCountry1" type="String" />
       </Parameters>
       <Query>SELECT IFNULL(f.COUNTRY,f.REGION) AS Country, f.YEAR AS Year, f.MEASURE AS Value
            FROM figure f
            INNER JOIN country_code c
            ON IFNULL(f.COUNTRY,f.REGION) = c.COUNTRY_NAME
            WHERE f.INDICATOR_ID= ${pIndicator}
            AND c.COUNTRY_NAME IN (REPLACE(${pCountry1}, '_', ' '),'EU28')
            ORDER BY YEAR ASC, FIELD(c.COUNTRY_NAME, ${pCountry1},'EU28') ASC
       </Query>
   </DataAccess>

  <!-- Get country list without the one on the parameters -->
  <DataAccess access="public" connection="dvt_conn" id="getCountryList" type="sql">
      <Cache duration="3600" enabled="true" />
      <Columns/>
      <Parameters>
        <Parameter default="Austria" name="pCountry" type="String" />
      </Parameters>
      <Query>SELECT DISTINCT(REPLACE(COUNTRY_NAME, ' ', '_')) AS Id, COUNTRY_NAME AS Description FROM country_code
          WHERE COUNTRY_NAME not in (REPLACE(${pCountry}, '_', ' '))
          ORDER BY COUNTRY_NAME ASC
      </Query>
  </DataAccess>

  <!-- Get country list without the one on the parameters and without EU -->
  <DataAccess access="public" connection="dvt_conn" id="getStrategiesCountryList" type="sql">
      <Cache duration="3600" enabled="true" />
      <Columns/>
      <Parameters>
        <Parameter default="" name="pCountry" type="String" />
      </Parameters>
      <Query>SELECT REPLACE(cc.COUNTRY_NAME, ' ', '_') AS ID, cc.COUNTRY_NAME AS Description
        FROM strategy s 
        INNER JOIN country_code cc 
        ON s.COUNTRY = cc.COUNTRY_NAME
        WHERE cc.COUNTRY_NAME not in (REPLACE(${pCountry}, '_', ' '))
        ORDER BY s.COUNTRY ASC
      </Query>
  </DataAccess>

  <!-- Get country code list without the EU -->
  <DataAccess access="public" connection="dvt_conn" id="getStrategiesCountryCode" type="sql">
      <Cache duration="3600" enabled="true" />
      <Columns/>
      <Query>SELECT cc.COUNTRY_CODE AS ID, cc.COUNTRY_NAME AS Description
        FROM strategy s 
        INNER JOIN country_code cc 
        ON s.COUNTRY = cc.COUNTRY_NAME
        WHERE cc.COUNTRY_NAME != "EU28"
        ORDER BY s.COUNTRY ASC
      </Query>
  </DataAccess>

  <!-- Get information for country profile National Strategies -->
  <DataAccess access="public" connection="dvt_conn" id="getAllCountries" type="sql">
      <Cache duration="3600" enabled="true" />
      <Columns />
      <Query>SELECT DISTINCT(COUNTRY_CODE) AS Id, COUNTRY_NAME AS Description FROM country_code
          ORDER BY COUNTRY_NAME ASC
      </Query>
  </DataAccess>

  <!-- Get information for country profile National Strategies -->
  <DataAccess access="public" connection="dvt_conn" id="getCountryStrategies" type="sql">
      <Cache duration="3600" enabled="true" />
      <Columns />
      <Parameters>
        <Parameter default="Austria" name="pCountry" type="String" />
      </Parameters>
      <Query>SELECT cc.COUNTRY_NAME, IFNULL (s.BASIC_INFO, "") AS BasicInfo, IFNULL(s.BACKGROUND, "") AS Background, IFNULL(s.STRATEGYS_MAIN_CHARACTERISTICS,"") AS StMainChar, IFNULL(s.STRATEGYS_DETAILS_AND_ACTIVITY_PLAN,"") AS StDetActPlan, IFNULL(s.ACTORS_STAKEHOLDERS,"") AS ActStake, IFNULL(s.RESOURCES_TIMEFRAME,"") AS ResTime, IFNULL(s.EVALUATION_LEARNED,"") AS EvalLearned, IFNULL(s.EU_STRATEGIC_FRAMEWORK,"") AS EUStFrwk, cc.COUNTRY_CODE
        FROM strategy s
        INNER JOIN country_code cc
        ON s.COUNTRY=cc.COUNTRY_NAME
        WHERE cc.COUNTRY_NAME = REPLACE(${pCountry}, '_', ' ')
      </Query>
  </DataAccess>

  <DataAccess access="public" connection="dvt_conn" id="getAllMatrix" type="sql">
      <Cache duration="3600" enabled="true" />
      <Columns />
      <Parameters>
        <Parameter default="" name="pFilter" type="String" />
      </Parameters>
      <Query>SELECT DISTINCT(m.ITEM_ID) AS Id, c.COUNTRY_NAME AS Country, m.IMPROVING_THE_IMPLEMENTATION_RECORD AS implementation,m.IMPROVING_THE_PREVENTION AS prevention, m.TACKLING AS tackling ,m.OBJECTIVES AS objectives ,m.DETAIL AS detail,c.COUNTRY_CODE AS country_code
        FROM matrix m
        INNER JOIN country_code c
        ON c.COUNTRY_CODE = m.COUNTRY
        ORDER BY Country ASC
      </Query>
  </DataAccess>
  <DataAccess access="public" connection="dvt_conn" id="getMatrixCountries" type="sql">
      <Cache duration="3600" enabled="true" />
      <Columns />
      <Query>SELECT DISTINCT (c.COUNTRY_NAME) AS Country, c.COUNTRY_CODE AS country_code
        FROM matrix m
        INNER JOIN country_code c
        ON c.COUNTRY_CODE = m.COUNTRY
        ORDER BY Country ASC
      </Query>
  </DataAccess>

  <DataAccess access="public" connection="dvt_conn" id="getSearchListChallenges" type="sql">
      <Cache duration="3600" enabled="true"/>
      <Columns/>
      <Parameters>
          <Parameter default="null" name="challenge1" type="Numeric"/>
          <Parameter default="null" name="challenge2" type="Numeric"/>
          <Parameter default="null" name="challenge3" type="Numeric"/>
          <Parameter default=".*" name="countries" type="String"/>
      </Parameters>
      <Query>
          SELECT
          c.COUNTRY_NAME as `country`,
          m.OBJECTIVES as `objectives`,
          m.IMPROVING_THE_IMPLEMENTATION_RECORD AS implementation,
          m.IMPROVING_THE_PREVENTION AS prevention, 
          m.TACKLING AS tackling,
          m.DETAIL as `detail`,
          c.COUNTRY_CODE as `country_code`
          FROM matrix m
          INNER JOIN country_code c
          ON c.COUNTRY_CODE = m.COUNTRY

          /*JOIN condition*/
           WHERE c.COUNTRY_NAME REGEXP ${countries}
           AND (m.IMPROVING_THE_IMPLEMENTATION_RECORD=${challenge1}
           OR m.IMPROVING_THE_PREVENTION=${challenge2}
           OR m.TACKLING=${challenge3})

          order by Country ASC
      </Query>
  </DataAccess>

    <!-- MATRIX OSH AUTHORITIES SEARCHER -->
    <DataAccess access="public" connection="dvt_conn" id="getSearchTerm" type="sql">
      <Cache duration="3600" enabled="true" />
      <Columns/>
      <Parameters>
        <Parameter default=".*" name="term" type="String" />
        <Parameter default="null" name="institution1" type="Numeric"/>
        <Parameter default="null" name="institution2" type="Numeric"/>
        <Parameter default="null" name="institution3" type="Numeric"/>
        <Parameter default="null" name="institution4" type="Numeric"/>
        <Parameter default=".*" name="countries" type="String"/>
      </Parameters>
        <Query>
        SELECT DISTINCT(mp.id) AS id, n.literal_id AS country_name, n.country_code as country_code, mp.check_1 AS osh_authority, mp.check_2 AS compensation, 
        mp.check_3 AS prevention, mp.check_4 AS standardisation, mp.text_1_literal_id AS name_authority, mp.text_2_literal_id AS link_authority, mp.text_3_literal_id AS detail_authority
        FROM matrix_page mp
        INNER JOIN nuts n
        ON n.id = mp.nuts_id
        INNER JOIN literal l
        ON l.id = mp.text_1_literal_id
        INNER JOIN literal l2
        ON l2.id = mp.text_2_literal_id
        INNER JOIN literal l3
        ON l3.id = mp.text_3_literal_id
        INNER JOIN translation t
        ON l.id = t.literal_id
        INNER JOIN translation t2
        ON l2.id = t2.literal_id
        INNER JOIN translation t3
        ON l3.id = t3.literal_id
        WHERE mp.page = 'MATRIX_AUTHORITY' 
        AND n.country_code REGEXP ${countries}
        AND (mp.check_1=${institution1}
        OR mp.check_2=${institution2}
        OR mp.check_3=${institution3}
        OR mp.check_4=${institution4})
        AND (n.name REGEXP ${term} OR t.text REGEXP ${term} OR t2.text REGEXP ${term} OR t3.text REGEXP ${term});
      </Query>
    </DataAccess>

    <!-- ALL MATRIX DATA OF OSH AUTHORITIES VIEW -->
    <DataAccess access="public" connection="dvt_conn" id="getAllMatrixAuthorities" type="sql">
      <Cache duration="3600" enabled="true" />
      <Columns />
      <Parameters>
      <Parameter default="" name="pFilter" type="String" />
      </Parameters>
      <Query>
        SELECT DISTINCT(mp.id) AS id, n.literal_id AS country_name, n.country_code as country_code, mp.check_1 AS osh_authority, mp.check_2 AS compensation, 
        mp.check_3 AS prevention, mp.check_4 AS standardisation, mp.text_1_literal_id AS name_authority, mp.text_2_literal_id AS link_authority, mp.text_3_literal_id AS detail_authority
        FROM matrix_page mp
        INNER JOIN nuts n
        ON n.id = mp.nuts_id
        WHERE mp.page = 'MATRIX_AUTHORITY'
        ORDER BY country_name ASC, standardisation ASC, prevention ASC, compensation ASC, osh_authority ASC
      </Query>
    </DataAccess>

    <!-- ALL COUNTRIES TO SELECT FROM IN OSH AUTHORITIES VIEW -->
    <DataAccess access="public" connection="dvt_conn" id="getMatrixAuthsCountries" type="sql">
      <Cache duration="3600" enabled="true" />
      <Columns />
      <Query>
      SELECT DISTINCT (n.literal_id) AS country, n.country_code AS country_code
      FROM matrix_page mp
      INNER JOIN nuts n
      ON n.id = mp.nuts_id
      WHERE mp.page = 'MATRIX_AUTHORITY'
      ORDER BY country ASC
      </Query>
    </DataAccess>

    <DataAccess access="public" connection="dvt_conn" id="getSearchList" type="sql">
      <Cache duration="3600" enabled="true"/>
      <Columns/>
      <Parameters>            
          <Parameter default=".*" name="countries" type="String"/>
      </Parameters>
      <Query>
            SELECT n.literal_id as country_name,
            mp.check_1 AS osh_authority,
            mp.check_2 AS compensation, 
            mp.check_3 AS prevention,
            mp.check_4 AS standardisation,
            mp.text_1_literal_id as name_authority,
            mp.text_2_literal_id as link_authority,
            mp.text_3_literal_id as detail_authority,
            n.country_code as country_code
            FROM matrix_page mp
            INNER JOIN nuts n
            ON n.id = mp.nuts_id

            /*JOIN condition*/
             WHERE n.country_code REGEXP ${countries}
             AND mp.page = 'MATRIX_AUTHORITY'

            order by country_name ASC, standardisation ASC, prevention ASC, compensation ASC, osh_authority ASC
      </Query>
    </DataAccess>

    <!-- GET MATRIX OSH AUTHORITIES DATA APPLYING PAGE FILTERS -->
    <DataAccess access="public" connection="dvt_conn" id="getSearchListInstitutions" type="sql">
      <Cache duration="3600" enabled="true"/>
      <Columns/>
      <Parameters>
        <Parameter default="null" name="institution1" type="Numeric"/>
        <Parameter default="null" name="institution2" type="Numeric"/>
        <Parameter default="null" name="institution3" type="Numeric"/>
        <Parameter default="null" name="institution4" type="Numeric"/>
        <Parameter default=".*" name="countries" type="String"/>
      </Parameters>
      <Query>
        SELECT n.literal_id as country_name,
        mp.check_1 AS osh_authority,
        mp.check_2 AS compensation, 
        mp.check_3 AS prevention,
        mp.check_4 AS standardisation,
        mp.text_1_literal_id as name_authority,
        mp.text_2_literal_id as link_authority,
        mp.text_3_literal_id as detail_authority,
        n.country_code as country_code
        FROM matrix_page mp
        INNER JOIN nuts n
        ON n.id = mp.nuts_id
        
        /*JOIN condition*/
         WHERE mp.page = 'MATRIX_AUTHORITY'
         AND n.country_code REGEXP ${countries}
         AND (mp.check_1=${institution1}
         OR mp.check_2=${institution2}
         OR mp.check_3=${institution3}
         OR mp.check_4=${institution4})

        order by country_name ASC, standardisation ASC, prevention ASC, compensation ASC, osh_authority ASC
      </Query>
  </DataAccess>

  <!-- ALL AVAILABLE COUNTRIES FOR NATIONAL STRATEGIES -->
  <DataAccess access="public" connection="dvt_conn" id="getStrategiesCountries" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Query>
      SELECT DISTINCT (n.literal_id) AS country, n.country_code AS country_code
      FROM strategies_page sp
      INNER JOIN nuts n
      ON n.id = sp.nuts_id
      WHERE sp.page = 'STRATEGY'
      ORDER BY country ASC
    </Query>
  </DataAccess>

  <!-- ALL AVAILABLE COUNTRIES FOR REGULATIONS -->
  <DataAccess access="public" connection="dvt_conn" id="getRegulationsCountries" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Query>
      SELECT DISTINCT (n.literal_id) AS country, n.country_code AS country_code
      FROM strategies_page sp
      INNER JOIN nuts n
      ON n.id = sp.nuts_id
      WHERE sp.page = 'STRATEGY_REGULATION'
      ORDER BY country ASC
    </Query>
  </DataAccess>

  <!-- ALL AVAILABLE COUNTRIES FOR ENFORCE CAPACITIES -->
  <DataAccess access="public" connection="dvt_conn" id="getCapacitiesCountries" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Query>
      SELECT DISTINCT (n.literal_id) AS country, n.country_code AS country_code
      FROM strategies_page sp
      INNER JOIN nuts n
      ON n.id = sp.nuts_id
      WHERE sp.page = 'STRATEGY_ENFOR_CAPACITY'
      ORDER BY country ASC
    </Query>
  </DataAccess>

  <!-- ALL AVAILABLE COUNTRIES FOR ECONOMIC AND SECTOR PROFILES INDICATORS -->
  <DataAccess access="public" connection="dvt_conn" id="getAvailableEconomicSectorCountries" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Parameters>
      <Parameter default="AT" name="pCountry" type="String" />
    </Parameters>
    <Query>
      SELECT DISTINCT(n.literal_id) as country_name, n.country_code as country_code
      FROM nuts n
      INNER JOIN profile p
      ON n.id = p.nuts_id
      INNER JOIN value v
      ON v.profile_id = p.id
      WHERE v.indicator_id IN (31, 36, 37, 38, 39, 40) 
      AND n.country_code not in (${pCountry})
      ORDER BY country_name ASC;
    </Query>
  </DataAccess>

  <!-- Get Company size indicators and values -->
  <DataAccess access="public" connection="dvt_conn" id="getCompanySizeData" type="sql">
    <Cache duration="3600" enabled="true"/>
    <Columns/>
    <Parameters>
      <Parameter default="1" name="pIndicator" type="Numeric" />
      <Parameter default="AT" name="pCountry1" type="String" />
      <Parameter default="BE" name="pCountry2" type="String" />
      <Parameter default="6" name="pDataset" type="Numeric" />
    </Parameters>
    <Query>
      SELECT t.text as Size, n.country_code as Country, (v.value*100) as Value
      FROM nuts n, profile p, indicator i, value v, split_company_size scs, dataset d, translation t
      WHERE n.id = p.nuts_id
      AND p.company_size_id = scs.id
      AND i.id = v.indicator_id
      AND v.profile_id = p.id
      AND d.id = ${pDataset} AND d.id = v.dataset_id
      AND t.literal_id = scs.literal_id
      AND n.country_code IN (${pCountry1}, ${pCountry2}, 'EU28') AND i.id = ${pIndicator}
      ORDER BY FIELD(n.country_code, ${pCountry1}, ${pCountry2}, 'EU28') DESC
    </Query>
  </DataAccess>

    <!-- Get Employment per sector indicators and values -->
  <DataAccess access="public" connection="dvt_conn" id="getEmploymentPerSectorData" type="sql">
    <Cache duration="3600" enabled="true"/>
    <Columns/>
    <Parameters>
      <Parameter default="1" name="pIndicator" type="Numeric" />
      <Parameter default="AT" name="pCountry1" type="String" />
      <Parameter default="BE" name="pCountry2" type="String" />
      <Parameter default="6" name="pDataset" type="Numeric" />
    </Parameters>
    <Query>
      SELECT t.text as Sector, n.country_code as Country, (v.value*100) as Value
      FROM nuts n, profile p, indicator i, value v, split_activity_sector sas, dataset d, translation t
      WHERE n.id = p.nuts_id 
      AND p.activity_sector_id = sas.id 
      AND i.id = v.indicator_id 
      AND v.profile_id = p.id
      AND d.id = ${pDataset} AND d.id = v.dataset_id 
      AND t.literal_id = sas.literal_id
      AND sas.id IN (1, 2, 3, 4, 5, 6, 7)
      AND n.country_code IN (${pCountry1}, ${pCountry2}, 'EU28') AND i.id = ${pIndicator}
      ORDER BY FIELD(n.country_code, ${pCountry1}, ${pCountry2}, 'EU28') DESC
    </Query>
  </DataAccess>

  <!-- Get Employment rate indicators and values -->
  <DataAccess access="public" connection="dvt_conn" id="getEmploymentRateData" type="sql">
    <Cache duration="3600" enabled="true"/>
    <Columns/>
    <Parameters>
      <Parameter default="1" name="pIndicator" type="Numeric" />
      <Parameter default="AT" name="pCountry1" type="String" />
      <Parameter default="BE" name="pCountry2" type="String" />
      <Parameter default="6" name="pDataset" type="Numeric" />
    </Parameters>
    <Query>
      SELECT n.country_code as Country, (v.value*100) as Value
      FROM nuts n, profile p, indicator i, value v, dataset d
      WHERE n.id = p.nuts_id
      AND i.id = v.indicator_id
      AND v.profile_id = p.id
      AND d.id = ${pDataset} AND d.id = v.dataset_id
      AND n.country_code IN (${pCountry1}, ${pCountry2}, 'EU28') AND i.id = ${pIndicator}
      ORDER BY FIELD(n.country_code, ${pCountry1}, ${pCountry2}, 'EU28') DESC
    </Query>
  </DataAccess>

  <!-- Get unemployment rate indicators and values -->
  <DataAccess access="public" connection="dvt_conn" id="getUnemploymentRateData" type="sql">
    <Cache duration="3600" enabled="true"/>
    <Columns/>
    <Parameters>
      <Parameter default="1" name="pIndicator" type="Numeric" />
      <Parameter default="AT" name="pCountry1" type="String" />
      <Parameter default="BE" name="pCountry2" type="String" />
      <Parameter default="6" name="pDataset" type="Numeric" />
    </Parameters>
    <Query>
      SELECT n.country_code as Country, (v.value*100) as Value
      FROM nuts n, profile p, indicator i, value v, dataset d
      WHERE n.id = p.nuts_id
      AND i.id = v.indicator_id
      AND v.profile_id = p.id
      AND d.id = ${pDataset} AND d.id = v.dataset_id
      AND n.country_code IN (${pCountry1}, ${pCountry2}, 'EU28') AND i.id = ${pIndicator}
      ORDER BY FIELD(n.country_code, ${pCountry1}, ${pCountry2}, 'EU28') ASC
    </Query>
  </DataAccess>

    <!-- Get GDP per capita indicators and values -->
  <DataAccess access="public" connection="dvt_conn" id="getGDPData" type="sql">
    <Cache duration="3600" enabled="true"/>
    <Columns/>
    <Parameters>
      <Parameter default="1" name="pIndicator" type="Numeric" />
      <Parameter default="AT" name="pCountry1" type="String" />
      <Parameter default="BE" name="pCountry2" type="String" />
      <Parameter default="6" name="pDataset" type="Numeric" />
    </Parameters>
    <Query>
      SELECT n.country_code as Country, (v.value*100) as Value
      FROM nuts n, profile p, indicator i, value v, dataset d
      WHERE n.id = p.nuts_id
      AND i.id = v.indicator_id
      AND v.profile_id = p.id
      AND d.id = ${pDataset} AND d.id = v.dataset_id
      AND n.country_code IN (${pCountry1}, ${pCountry2}, 'EU28') AND i.id = ${pIndicator}
      ORDER BY FIELD(n.country_code, ${pCountry1}, ${pCountry2}, 'EU28') ASC
    </Query>
  </DataAccess>

  <!-- Get income per capita indicators and values -->
  <DataAccess access="public" connection="dvt_conn" id="getIncomePerCapitaData" type="sql">
    <Cache duration="3600" enabled="true"/>
    <Columns/>
    <Parameters>
      <Parameter default="1" name="pIndicator" type="Numeric" />
      <Parameter default="AT" name="pCountry1" type="String" />
      <Parameter default="BE" name="pCountry2" type="String" />
      <Parameter default="6" name="pDataset" type="Numeric" />
    </Parameters>
    <Query>
      SELECT n.country_code as Country, p.year as Year, v.value as Income
      FROM nuts n, profile p, indicator i, value v, dataset d
      WHERE n.id = p.nuts_id
      AND i.id = v.indicator_id
      AND v.profile_id = p.id
      AND d.id = 4 AND d.id = v.dataset_id
      AND n.country_code IN (${pCountry1}, ${pCountry2}, 'EU28') AND i.id = ${pIndicator}
      ORDER BY FIELD(n.country_code, ${pCountry1}, ${pCountry2}, 'EU28') ASC
    </Query>
  </DataAccess>

  <!-- WORKFORCE PROFILE || get genders for select option of employee groups -->
  <DataAccess access="public" connection="dvt_conn" id="getGenders" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Parameters>
    </Parameters>
    <Query>
      SELECT sg.id as gender_id, sg.literal_id as gender_name
      FROM split_gender sg
      ORDER BY FIELD(gender_id, 2, 3, 1)
    </Query>
  </DataAccess>

  <!-- WORKFORCE PROFILE || get countries available for select option in tablets and mobiles -->
  <DataAccess access="public" connection="dvt_conn" id="getAvailableCountries" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Parameters>
      <Parameter default="6" name="pDataset" type="Numeric" />
    </Parameters>
    <Query>
      SELECT distinct(n.country_code) as countryKey, n.literal_id as country_name
      FROM nuts n, profile p, value v, dataset d
      WHERE n.id = p.nuts_id 
      AND v.profile_id = p.id 
      AND d.id = ${pDataset} AND d.id = v.dataset_id
      AND v.indicator_id IN (37, 38, 39)
      ORDER BY country_name ASC
    </Query>
  </DataAccess>

  <!-- WORKFORCE PROFILE || get countries available for select option in tablets and mobiles -->
  <DataAccess access="public" connection="dvt_conn" id="getFilteringCountries" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Parameters>
      <Parameter default="6" name="pDataset" type="Numeric" />
      <Parameter default=".*" name="countries" type="String"/>
    </Parameters>
    <Query>
      SELECT distinct(n.country_code) as countryKey, n.name as country_name
      FROM nuts n, profile p, value v, dataset d
      WHERE n.id = p.nuts_id 
      AND v.profile_id = p.id 
      AND d.id = ${pDataset} AND d.id = v.dataset_id
      AND n.country_code REGEXP ${countries}
      AND v.indicator_id IN (37, 38, 39)
      ORDER BY country_name ASC
    </Query>
  </DataAccess>

  <!-- WORKFORCE PROFILE || get median age data -->
  <DataAccess access="public" connection="dvt_conn" id="getMedianAgeData" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Parameters>
      <Parameter default="6" name="pDataset" type="Numeric" />
    </Parameters>
    <Query>
      SELECT n.country_code as countryKey, n.literal_id as country_name, v.value as value
      FROM nuts n, profile p, value v, dataset d
      WHERE n.id = p.nuts_id 
      AND v.profile_id = p.id 
      AND d.id = ${pDataset} AND d.id = v.dataset_id
      AND v.indicator_id = 37
      ORDER BY country_name ASC
    </Query>
  </DataAccess>

  <!-- WORKFORCE PROFILE || get ageing workers data -->
  <DataAccess access="public" connection="dvt_conn" id="getAgeingWorkersData" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Parameters>
      <Parameter default="6" name="pDataset" type="Numeric" />
    </Parameters>
    <Query>
      SELECT n.country_code as countryKey, n.literal_id as country_name, v.value as value
      FROM nuts n, profile p, value v, dataset d
      WHERE n.id = p.nuts_id 
      AND v.profile_id = p.id 
      AND d.id = ${pDataset} AND d.id = v.dataset_id
      AND v.indicator_id = 38
      ORDER BY country_name ASC
    </Query>
  </DataAccess>

  <!-- WORKFORCE PROFILE || get total employment rate data -->
  <DataAccess access="public" connection="dvt_conn" id="getTotalEmploymentData" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Parameters>
      <Parameter default="6" name="pDataset" type="Numeric" />
    </Parameters>
    <Query>
      SELECT n.country_code as countryKey, n.literal_id as country_name, (v.value*100) as value
      FROM nuts n, profile p, value v, dataset d
      WHERE n.id = p.nuts_id 
      AND v.profile_id = p.id 
      AND d.id = ${pDataset} AND d.id = v.dataset_id
      AND v.indicator_id = 39
      AND p.gender_id = 1
      ORDER BY country_name ASC
    </Query>
  </DataAccess>

  <!-- WORKFORCE PROFILE || get male employment rate data -->
  <DataAccess access="public" connection="dvt_conn" id="getMaleEmploymentData" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Parameters>
      <Parameter default="6" name="pDataset" type="Numeric" />
    </Parameters>
    <Query>
      SELECT n.country_code as countryKey, n.literal_id as country_name, (v.value*100) as value
      FROM nuts n, profile p, value v, dataset d
      WHERE n.id = p.nuts_id 
      AND v.profile_id = p.id 
      AND d.id = ${pDataset} AND d.id = v.dataset_id
      AND v.indicator_id = 39
      AND p.gender_id = 2
      ORDER BY country_name ASC
    </Query>
  </DataAccess>

  <!-- WORKFORCE PROFILE || get female employment rate data -->
  <DataAccess access="public" connection="dvt_conn" id="getFemaleEmploymentData" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Parameters>
      <Parameter default="6" name="pDataset" type="Numeric" />
    </Parameters>
    <Query>
      SELECT n.country_code as countryKey, n.literal_id as country_name, (v.value*100) as value
      FROM nuts n, profile p, value v, dataset d
      WHERE n.id = p.nuts_id 
      AND v.profile_id = p.id 
      AND d.id = ${pDataset} AND d.id = v.dataset_id
      AND v.indicator_id = 39
      AND p.gender_id = 3
      ORDER BY country_name ASC
    </Query>
  </DataAccess>

  <!-- STEERING OF OSH || get indicators for select -->
  <DataAccess access="public" connection="dvt_conn" id="getRegulationIndicators" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Parameters>
      <Parameter default="41" name="pIndicator" type="Numeric" />
    </Parameters>
    <Query>
      SELECT id, literal_id 
      FROM indicator 
      WHERE id IN (44, 45, 46, 47, 48, 49)
    </Query>
  </DataAccess>

  <!-- STEERING OF OSH || get indicators for select -->
  <DataAccess access="public" connection="dvt_conn" id="getCountryRegulationData" type="sql">
    <Cache duration="3600" enabled="true" />
    <Columns />
    <Parameters>
      <Parameter default="AT" name="pCountry" type="String" />
    </Parameters>
    <Query>
      SELECT n.country_code as country_code, n.literal_id as country_name, text_1_literal_id as text1, text_2_literal_id as text2, text_3_literal_id as text3, text_4_literal_id as text4, 
      text_5_literal_id as text5, text_6_literal_id as text6, text_7_literal_id as text7, text_8_literal_id as text8, text_9_literal_id as text9, text_10_literal_id as text10, 
      text_11_literal_id as text11, text_12_literal_id as text12, text_13_literal_id as text13
      FROM strategies_page sp, nuts n
      where page='STRATEGY_REGULATION'
      AND n.id = sp.nuts_id
      AND n.country_code = ${pCountry}
    </Query>
  </DataAccess>
  
</CDADescriptor>