define(function(require){"use strict";function nextId(){return sequence++}function DvtDashboardDirective($log,$q,$window,$timeout,$cookies){Dashboard.prototype.checkServer=function(){return!0};var _=require("amd!cdf/lib/underscore");return{restrict:"E",priority:-2,scope:{parameters:"=",promises:"="},controller:["$scope",function($scope){$scope.components=[],$scope.dashboard?$scope.dashboard.components.length=0:(this.dashboard||(this.dashboard=new Dashboard),$scope.dashboard=this.dashboard),this.register=function(component){$scope.components.push(component)},$scope.id="dvt_dashboard"+nextId(),$log.debug("I'm controller-------------------DASHBOARD "+$scope.id)}],link:function(scope,element){$log.debug("Dashboard promises"),$log.debug(scope.promises),$q.all(scope.promises).then(function(data){$log.debug("Running dashboard promises");var dashboard=scope.dashboard;for(var name in scope.parameters)scope.parameters.hasOwnProperty(name)&&dashboard.addParameter(name,scope.parameters[name]);dashboard.addComponents(scope.components),$log.debug("I'm link__________________________________________DASHBOARD"),scope.resizeCharts=function(dashboard){var chartsTypeToUpdate=["cccBarChart","raphaelComponent"];_.filter(dashboard.components,function(elem,index){return chartsTypeToUpdate.indexOf(elem.type)>=0}).forEach(function(comp){"raphaelComponent"!=comp.type?(comp.chart.options.width=comp.placeholder().width(),comp.chart.render(!0,!0,!1)):comp.width=comp.placeholder().width()})},$window.addEventListener("resize",function(){_.throttle(scope.resizeCharts(dashboard),50)}),dashboard.init(),scope.$emit("loaded"),configService.isDebugMode()&&($window.dashboard=dashboard),$log.debug("I'm link__________________________________________"+scope.id)})}}}var configService=require("horizontal/config/configService"),Dashboard=require("cdf/Dashboard.Clean"),sequence=1;return DvtDashboardDirective.$inject=["$log","$q","$window","$timeout","$cookies"],DvtDashboardDirective});